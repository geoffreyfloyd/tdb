{"rootActionId":null,"duration":660,"date":"2016-02-01T07:00:00.000Z","details":"New Developer Orientation.\nDev on Forms and Validation API.\nTry to resolve build errors on Jenkins (due to Sandcastle and NET461 deps). i ended up disabling the projects that would not build, as the CI is not really bringing any advantages to these projects. I asked Jenn to take a look at the Sandcastle building errors on Jenkins when she has the time.\nRead about different git workflows, and to help me fully digest it, i've been studying by writing a detailed story about a developer utilizing the workflow. I'm very intrigued and inspired by the idea of treating commit history like a book; \"you would never publish a draft\". I want to immerse myself in this way of thinking about commit history. My general flow of thinking is this:\nAlways start with a 'ws-<working-title>' branch. Plan to throw this branch away when you're done. It's your private workspace; your personal historical scratchpad to work out the problem you're trying to solve.\nOnce you've worked out all the kinks and you are satisfied with your work, it's time to share your solution with the rest of the group; but not the scribbled up and edited draft that you used to find the best solution, and now that you've got the solution worked out, you probably have a much better clearer picture in your mind of precisely what changes are required to solve it.\nMerge your private workspace into to a well-named branch after you've , and sculpt a succinct commit history w/ detailed commit messages. As you decide to either changes together or commit them separately, ask yourself, \"Can the described changes in this commit be easily code reviewed?\".\nOnce you feel that your work in this branch is 'publishable', it's time to push it to the server and send a group email with the title: \"pull request: branch-name\". This will let others know your public branch is up for review.\nResources:\nhttps://www.atlassian.com/git/tutorials/comparing-workflows/gitflow-workflow\nhttps://sandofsky.com/blog/git-workflow.html</working-title>","entry":"performed"}