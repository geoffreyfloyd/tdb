{
    "date": "2015-05-29T04:00:00.000Z",
    "entry": "performed",
    "duration": 120,
    "rootActionId": null,
    "details": "ADD: Exam Type Mail Templates\n\nwe talked about maybe displaying Mail Templates in the web UI.  Here’s an example query, by Exam Type:\nDECLARE @ExamTypeID INT = 5055\nDECLARE @ShowAll BIT = 1\n\nSELECT mt.FunctionName,t.Comments,CAST(mt.MailTemplateXslt AS XML)\nFROM MailTemplateTracerBased AS mt\nINNER JOIN MasterTracers AS t\n       ON t.[Function] = mt.FunctionName\nWHERE mt.ExamTypeID = @ExamTypeID\nAND (\n              @ShowAll = 1\n       OR GETDATE() BETWEEN mt.MailTemplateValidBegin AND COALESCE(mt.MailTemplateValidEnd,'1/1/2099')\n       )\n\nThat last field is the stylesheet / template itself.  For the SQL Report, I transform that stylesheet using a different stylesheet to it looks like this:\nhttp://reports.chsmedical.com/Reports/Pages/Report.aspx?ItemPath=%2fMets+Reports%2fMail+Template+Preview&amp;ViewMode=Detail\n\nThat would be super nice if we could do something that, but if that’s too crazy perhaps we can send them directly to this report.  The report is not so accurate for some templates because while SSRS can display HTML it doesn’t render some elements very well.  If you wanted to try to display that, I can try to send you the XSLT to transform that XSLT to HTML, or if you wanted to just use JS to pull the elements.  For the xsl:value-of’s, in the report I take the @select attribute value and put it in [square brackets] with some color to mark the data-point placeholders.\n\nWe do use a few xsl control elements.  SSRS renders them using my stylesheet with varying success.\n\nI have a few:\nXsl:if\nXsl:when\nXsl:test\nXsl:for-each\n\nTrying to find a way to display those to allow the users to make sense of them is a bit tricky.  \n\nThe for-each is a little more common than the others due to multiple facility assignments now.",
    "userId": "db6f45f8-0c0e-4135-9a29-0be2c79a4eb1"
}